---
trigger:
  paths:
    include:
      - .azure-devops/pipelines/monitoring.yml
      - components/monitoring/*
      - environments/*/monitoring*
  branches:
    include:
      - main

parameters:
  - name: deployTest
    displayName: Deploy Test Environment
    type: boolean
    default: false

variables:
  component: monitoring
  vmImage: ubuntu-latest

stages:
  - stage: Build
    displayName: Build and Test
    variables:
      - template: /environments/test/monitoring.yml
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImage)
        steps:
          - task: AzureCLI@2
            displayName: Build Bicep Templates
            inputs:
              azureSubscription: ${{ variables.azureConnection }}
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                az bicep build --file $(Build.SourcesDirectory)/components/$(component)/resources.bicep
          - task: CopyFiles@2
            displayName: Copy Files
            inputs:
              Contents: |
                $(Build.SourcesDirectory)/components/$(component)/**
                $(Build.SourcesDirectory)/environments/**
              targetFolder: $(Build.ArtifactStagingDirectory)
          - task: PublishPipelineArtifact@1
            displayName: Publish Pipeline Artifact
            inputs:
              artifactName: drop
              targetPath: $(Build.ArtifactStagingDirectory)

  - stage: Validate
    displayName: Validate Deployment
    dependsOn: Build
    condition: succeeded()
    jobs:
      - job: ValidateTest
        displayName: Validate Deployment Test
        variables:
          - template: /environments/test/monitoring.yml
        pool:
          vmImage: $(vmImage)
        steps:
          - checkout: none
          - download: current
          - task: AzureResourceManagerTemplateDeployment@3
            displayName: Validate Deployment Test
            inputs:
              action: Create Or Update Resource Group
              deploymentScope: Resource Group
              subscriptionId: $(subscriptionId)
              azureResourceManagerConnection: ${{ variables.azureConnection }}
              resourceGroupName: $(resourceGroup)
              location: $(location)
              csmFile: $(Pipeline.Workspace)/drop/components/$(component)/resources.json
              csmParametersFile: $(Pipeline.Workspace)/drop/environments/$(environmentShortName)/$(component).parameters.json
              deploymentMode: Validation

      - job: ValidateProd
        displayName: Validate Deployment Production
        variables:
          - template: /environments/prod/monitoring.yml
        pool:
          vmImage: $(vmImage)
        steps:
          - checkout: none
          - download: current
          - task: AzureResourceManagerTemplateDeployment@3
            displayName: Validate Deployment Production
            inputs:
              action: Create Or Update Resource Group
              deploymentScope: Resource Group
              subscriptionId: $(subscriptionId)
              azureResourceManagerConnection: ${{ variables.azureConnection }}
              resourceGroupName: $(resourceGroup)
              location: $(location)
              csmFile: $(Pipeline.Workspace)/drop/components/$(component)/resources.json
              csmParametersFile: $(Pipeline.Workspace)/drop/environments/$(environmentShortName)/$(component).parameters.json
              deploymentMode: Validation

  - stage: DeployTest
    displayName: Deploy Test
    dependsOn: Validate
    condition: and(succeeded(), or(eq(variables['Build.Reason'], 'PullRequest'), ${{ parameters.deployTest }}))
    variables:
      - template: /environments/test/monitoring.yml
    jobs:
      - deployment: DeployTest
        displayName: Deploy Test
        pool:
          vmImage: $(vmImage)
        environment: ${{ variables.environment }}
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureResourceManagerTemplateDeployment@3
                  displayName: Deploy Test
                  inputs:
                    action: Create Or Update Resource Group
                    deploymentScope: Resource Group
                    subscriptionId: $(subscriptionId)
                    azureResourceManagerConnection: ${{ variables.azureConnection }}
                    resourceGroupName: $(resourceGroup)
                    location: $(location)
                    csmFile: $(Pipeline.Workspace)/drop/components/$(component)/resources.json
                    csmParametersFile: $(Pipeline.Workspace)/drop/environments/$(environmentShortName)/$(component).parameters.json
                    deploymentMode: Incremental

  - stage: DeployProd
    displayName: Deploy Production
    dependsOn: Validate
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    variables:
      - template: /environments/prod/monitoring.yml
    jobs:
      - deployment: DeployProd
        displayName: Deploy Production
        pool:
          vmImage: $(vmImage)
        environment: ${{ variables.environment }}
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureResourceManagerTemplateDeployment@3
                  displayName: Deploy Azure Resources
                  inputs:
                    action: Create Or Update Resource Group
                    deploymentScope: Resource Group
                    subscriptionId: $(subscriptionId)
                    azureResourceManagerConnection: ${{ variables.azureConnection }}
                    resourceGroupName: $(resourceGroup)
                    location: $(location)
                    csmFile: $(Pipeline.Workspace)/drop/components/$(component)/resources.json
                    csmParametersFile: $(Pipeline.Workspace)/drop/environments/$(environmentShortName)/$(component).parameters.json
                    deploymentMode: Incremental
